dependecy




   implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.android.support:cardview-v7:23.+'
    implementation 'com.google.android.material:material:1.0.0'




main activity.xml



<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:orientation="vertical"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">


    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/my_recycler_view"
        android:scrollbars="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>



</LinearLayout>








custom_view.xml



<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="wrap_content">

    <androidx.cardview.widget.CardView
        android:layout_width="match_parent"
        android:layout_margin="10dp"
        android:background="@android:color/holo_orange_light"
        android:elevation="6dp"
        app:cardCornerRadius="5dp"
        android:padding="10dp"
        android:layout_height="wrap_content">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="@color/colorAccent"
            android:orientation="vertical"
            >

            <EditText
                android:id="@+id/name"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textStyle="normal"
                android:textSize="20sp"
                android:hint="Name"
                />

            <Button
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="30sp"
                android:text="Login"
                android:layout_margin="10dp"
                />


        </LinearLayout>




    </androidx.cardview.widget.CardView>


</LinearLayout>















AdapterModel.java


package com.example.customrecyclerview;

public class AdapterModel
{
    private String name ;

    public AdapterModel(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}









AdapterClass.java



package com.example.customrecyclerview;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

public class AdapterClass extends RecyclerView.Adapter<AdapterClass.MyViewHolder>
{
    private List<AdapterModel> List;
    private  onClickListenerr onClickListenerr ;




    public AdapterClass(List<AdapterModel> List , onClickListenerr onClickListenerr) {
        this.List = List;
        this.onClickListenerr = onClickListenerr ;

    }



    @NonNull
    @Override
    public AdapterClass.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        final View itemView = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.customview, parent, false);




        return new MyViewHolder(itemView , onClickListenerr);

    }



    @Override
    public void onBindViewHolder(@NonNull AdapterClass.MyViewHolder holder, int position)
    {
        AdapterModel data = List.get(position);
        holder.name.setText(data.getName());
    }

    @Override
    public int getItemCount() {

        return List.size();

            }



    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener
    {
        public EditText name;
        onClickListenerr onClickListenerr ;


        public MyViewHolder(View view , onClickListenerr onClickListenerr) {
            super(view);

            name = (EditText) view.findViewById(R.id.name);
            this.onClickListenerr = onClickListenerr ;

            view.setOnClickListener(this);

        }


        @Override
        public void onClick(View v) {
            onClickListenerr.onItemClick(getAdapterPosition());
        }
    }


    public interface onClickListenerr
    {
        public void onItemClick(int position);
    }



}







MainActivity.java





package com.example.customrecyclerview;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

public class AdapterClass extends RecyclerView.Adapter<AdapterClass.MyViewHolder>
{
    private List<AdapterModel> List;
    private  onClickListenerr onClickListenerr ;




    public AdapterClass(List<AdapterModel> List , onClickListenerr onClickListenerr) {
        this.List = List;
        this.onClickListenerr = onClickListenerr ;

    }



    @NonNull
    @Override
    public AdapterClass.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        final View itemView = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.customview, parent, false);




        return new MyViewHolder(itemView , onClickListenerr);

    }



    @Override
    public void onBindViewHolder(@NonNull AdapterClass.MyViewHolder holder, int position)
    {
        AdapterModel data = List.get(position);
        holder.name.setText(data.getName());
    }

    @Override
    public int getItemCount() {

        return List.size();

            }



    public class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener
    {
        public EditText name;
        onClickListenerr onClickListenerr ;


        public MyViewHolder(View view , onClickListenerr onClickListenerr) {
            super(view);

            name = (EditText) view.findViewById(R.id.name);
            this.onClickListenerr = onClickListenerr ;

            view.setOnClickListener(this);

        }


        @Override
        public void onClick(View v) {
            onClickListenerr.onItemClick(getAdapterPosition());
        }
    }


    public interface onClickListenerr
    {
        public void onItemClick(int position);
    }



}

